{contentType text}
{extends 'Components.tabbed-window'}
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<manialink id="{block id}edit-settings{/block}" version="3">
    {block icon}{/block}
    {block title}Edit {$name}{/block}

    {block navbar}
    {include 'Components.tabs', tabs =>
        [
            'Settings'=>'',
            'Maps'=>'msm.edit_maps,'.$name,
            'Folders'=>'msm.edit_folders,'.$name
        ]
    }
    {/block}

    {block content}
    <label class="text-light" pos="0 -9" size="8 4" textsize="0.5" text="Name:" valign="center"/>
    <entry id="filename" class="form" pos="8 -9" size="108 4" textsize="0.5" valign="center"/>

    <label class="text-light save" pos="109 -2.4" size="16 4" textsize="0.6" halign="center" valign="center" text=" SAVE" ScriptEvents="1" z-index="20" focusareacolor1="0000" focusareacolor2="0006" />

    <frame pos="0 -15" id="rows">
    {php $row=0}
    {foreach $nodes as $key => $node}
    <frame id="r{$row}" pos="0 {$row * -4.5}" data-row="{$row}" data-nodes="{count($node)}">
        {if !is_string($node)}
        <label class="collapsable btn-default" pos="58 0" size="117 4" textprefix="{$key}  " text="" textsize="0.5" ScriptEvents="1"/>

        <frame pos="-0.5 -1.5" size="117 {count($node)*5}" z-index="100">
            <quad pos="0 -0.5" size="120 {count($node)*5}" bgcolor="{config('colors.ui.window.bg.color')}" opacity="0.5" z-index="-1" />
            {php $i=0}
            {foreach $node as $subKey => $subNode}
            <label class="text-light" pos="2 {$i * -5 - 3}" size="80 4" text="{$subKey}" halign="left" valign="center" textsize="0.75"/>
            <entry class="entry form" pos="116 {$i++ * -5 - 2.5}" size="50 4" default="{$subNode}" data-key="{$subKey}" data-prev="{$subNode}" data-parent="{$key}" halign="right" valign="center" textsize="0.75"/>
            {/foreach}
        </frame>
        {else}
        <quad class="bg-dark" pos="-0.5 2" size="117 4" opacity="0.5" z-index="-1" />
        <label class="text-light" pos="1 0" size="55 4" text="{$key}" halign="left" valign="center" textsize="0.75"/>
        <entry class="entry form" pos="116 0" size="50 4" default="{$node}" data-key="{$key}" data-prev="{$node}" halign="right" valign="center" textsize="0.75"/>
        {/if}
    </frame>
    {php $row++}
    {/foreach}
    </frame>
    {/block}

    {block scriptDeclarations}
    {/block}

    {block functions}
    <script><!--
    Boolean isCollapsed(CMlFrame frame){
        declare trigger = (frame.Controls[0] as CMlLabel);
        return trigger.Value == "";
    }

    Void moveDown(Integer index, Integer nodes){
        declare rows <=> (Page.MainFrame.GetFirstChild("rows") as CMlFrame);

        for(i, index + 1, rows.Controls.count - 1){
            declare row = (rows.Controls[i] as CMlFrame);
            declare targetY = row.RelativePosition_V3[1] - (nodes * 5.0);
            AnimMgr.Add(row, "<frame pos='0 "^targetY^"' />", 200, CAnimManager::EAnimManagerEasing::ExpInOut);
        }
    }

    Void moveUp(Integer index, Integer nodes){
        declare rows <=> (Page.MainFrame.GetFirstChild("rows") as CMlFrame);

        for(i, index + 1, rows.Controls.count - 1){
            declare row = (rows.Controls[i] as CMlFrame);
            declare targetY = row.RelativePosition_V3[1] + (nodes * 5.0);
            AnimMgr.Add(row, "<frame pos='0 "^targetY^"' />", 200, CAnimManager::EAnimManagerEasing::ExpInOut);
        }
    }

    Void save(){
        declare window <=> (Page.MainFrame.GetFirstChild("window") as CMlFrame);
        declare filenameEntry <=> (Page.MainFrame.GetFirstChild("filename") as CMlEntry);
        declare Text[Text] changedNodes = Text[Text];

        Page.GetClassChildren("entry", window, True);

        foreach(entryControl in Page.GetClassChildren_Result){
            declare entry = (entryControl as CMlEntry);
            declare key = entry.DataAttributeGet("key");
            declare prevValue = entry.DataAttributeGet("prev");
            declare parent = entry.DataAttributeGet("parent");

            if(entry.Value != prevValue){
                if(parent != ""){
                    changedNodes[parent ^ "." ^ key] = entry.Value;
                }else{
                    changedNodes[key] = entry.Value;
                }
            }
        }

        alertUnsavedChanges = False;

        TriggerPageAction("msm.update,{$name|noescape}," ^ filenameEntry.Value ^ "," ^ changedNodes.tojson());
    }
    --></script>
    {/block}

    <script><!--
    {block bootScript}
        declare rows <=> (Page.MainFrame.GetFirstChild("rows") as CMlFrame);
        declare filenameEntry <=> (Page.MainFrame.GetFirstChild("filename") as CMlEntry);

        filenameEntry.SetText("{$name}", False);

        foreach(row in rows.Controls){
            declare r = (row as CMlFrame);

            if(r.Controls[0].HasClass("collapsable")){
                declare sub = (r.Controls[1] as CMlFrame);
                r.DataAttributeSet("oy", "" ^ r.RelativePosition_V3[1]);
                sub.DataAttributeSet("osy", "" ^ sub.Size[1]);
                sub.Size = <sub.Size[0], 0.0>;
            }
        }
    {/block}

    {block loop}
    {/block}

    {block pendingEvents}
        if(event.Control.HasClass("save") && event.Type == CMlScriptEvent::Type::MouseClick){
            save();
            window.Hide();
            return;
        }

        if(event.Control.HasClass("entry") && event.Type == CMlScriptEvent::Type::EntrySubmit){
            alertUnsavedChanges = True;
        }

        if(event.Control.HasClass("collapsable") && event.Type == CMlScriptEvent::Type::MouseClick){
            declare label = (event.Control as CMlLabel);
            declare frame = (event.Control.Parent.Controls[1] as CMlFrame);
            declare index = TL::ToInteger(event.Control.Parent.DataAttributeGet("row"));
            declare nodes = TL::ToInteger(event.Control.Parent.DataAttributeGet("nodes"));

            if(isCollapsed(event.Control.Parent)){
                label.SetText("");
                declare osy = TL::ToReal(frame.DataAttributeGet("osy"));
                AnimMgr.Add(frame, "<frame size='"^frame.Size[0]^" "^osy^"' />", 200, CAnimManager::EAnimManagerEasing::ExpInOut);
                moveDown(index, nodes);
            }else{
                label.SetText("");
                AnimMgr.Add(frame, "<frame size='"^frame.Size[0]^" 0' />", 200, CAnimManager::EAnimManagerEasing::ExpInOut);
                moveUp(index, nodes);
            }
        }

        if(event.Control.HasClass("icon") && event.Type == CMlScriptEvent::Type::MouseClick){
            window.Hide();
            TriggerPageAction("msm.overview");
            return;
        }
    {/block}
    --></script>
</manialink>