{contentType text}
{extends 'components.widget-base'}
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<manialink version="3">
    {block id}mx-karma{/block}
    {block size}44 10{/block}

    {block content}
    <quad class="bg-dark" z-index="-1" size="50 12" opacity="0.8"/>
    <label class="text-light" pos="2 -3" z-index="1" size="48 3" text="  MX KARMA" textsize=".3" valign="center"/>

    <frame z-index="2" pos="0 -6">
        <label class="text-lighter" id="stars-bg" pos="31 4" text="" z-index="1" size="25 4" textsize="0.5" opacity="0.3" hidden="1"/>
        <label class="text-lighter" id="no-votes" pos="41.5 4" text="No Votes" z-index="1" size="25 4" halign="right" textsize="0.5" opacity="0.3"/>
        <frame id="star-frame" size="0 4" pos="31 4" z-index="2">
            <label class="text-light" textcolor="fd0" text="" textsize="0.5"/>
        </frame>

        <frame id="buttons" scale="0.8" pos="-0.5 1">
            <frame pos="6  -3.2" id="100" data-id="100">
                <label class="text-success" size="9 4" textprefix="$s" text="+++" halign="center" valign="center" />
                <quad class="bg-success" size="9 4" halign="center" valign="center" opacity="0.5" />
                <label class="vote btn-success" size="9 4" text="+++" focusareacolor1="0000" ScriptEvents="1" />
            </frame>
            <frame pos="15  -3.2" id="80" data-id="80">
                <label class="text-success" size="9 4" textprefix="$s" text="++" halign="center" valign="center" />
                <quad class="bg-success" size="9 4" halign="center" valign="center" opacity="0.5" />
                <label class="vote btn-success" size="9 4" text="++" focusareacolor1="0000" ScriptEvents="1" />
            </frame>
            <frame pos="24  -3.2" id="60" data-id="60">
                <label class="text-success" size="9 4" textprefix="$s" text="+" halign="center" valign="center" />
                <quad class="bg-success" size="9 4" halign="center" valign="center" opacity="0.5" />
                <label class="vote btn-success" size="9 4" text="+" focusareacolor1="0000" ScriptEvents="1" />
            </frame>
            <frame pos="33  -3.2" id="40" data-id="40">
                <label class="text-danger" size="9 4" textprefix="$s" text="-" halign="center" valign="center" />
                <quad class="bg-danger" size="9 4" halign="center" valign="center" opacity="0.5" />
                <label class="vote btn-danger" size="9 4" text="-" focusareacolor1="0000" ScriptEvents="1" />
            </frame>
            <frame pos="42  -3.2" id="20" data-id="20">
                <label class="text-danger" size="9 4" textprefix="$s" text="--" halign="center" valign="center" />
                <quad class="bg-danger" size="9 4" halign="center" valign="center" opacity="0.5" />
                <label class="vote btn-danger" size="9 4" text="--" focusareacolor1="0000" ScriptEvents="1" />
            </frame>
            <frame pos="51  -3.2" id="0" data-id="0">
                <label class="text-danger" size="9 4" textprefix="$s" text="---" halign="center" valign="center" />
                <quad class="bg-danger" size="9 4" halign="center" valign="center" opacity="0.5" />
                <label class="vote btn-danger" size="9 4" text="---" focusareacolor1="0000" ScriptEvents="1" />
            </frame>
        </frame>

        <frame id="finish-notice" pos="0 2" scale="0.9" hidden="1">
            <label class="text-light" pos="5  -3.2" z-index="1" size="40 4" text="You need to finish before you can vote" halign="left" valign="center" textcolor="fff9"/>
        </frame>

        <frame id="loading-frame" pos="3.5 0" scale="0.85">
            <frame id="spinner-frame" pos="15 -1.75" halign="center" valign="center" scale="0.9">
                <label class="text-warning" pos="0.02 0.25" z-index="1" size="4 4" text="" halign="center" valign="center"/>
            </frame>
            <label class="text-warning" pos="17.25 -1.4" z-index="1" size="24 4" text="Loading" valign="center"/>
        </frame>
    </frame>
    {/block}

    {block script}
    <script><!--
Void startLoading(){
    (Page.MainFrame.GetFirstChild("finish-notice") as CMlFrame).Hide();
    declare spinner <=> (Page.MainFrame.GetFirstChild("spinner-frame") as CMlFrame);
    AnimMgr.Add(spinner, "<frame rot='359640' />", 999*1000, CAnimManager::EAnimManagerEasing::Linear);
    (Page.MainFrame.GetFirstChild("loading-frame") as CMlFrame).Show();
}

Void stopLoading(){
    declare spinner <=> (Page.MainFrame.GetFirstChild("spinner-frame") as CMlFrame);
    AnimMgr.Flush(spinner);
    (Page.MainFrame.GetFirstChild("loading-frame") as CMlFrame).Hide();
}

Void updateKarma(Real average, Integer total){
    declare starFrame <=> (Page.MainFrame.GetFirstChild("star-frame") as CMlFrame);
    declare width = 0.0;
    if(total == 0){
        (Page.MainFrame.GetFirstChild("stars-bg") as CMlLabel).Hide();
        (Page.MainFrame.GetFirstChild("no-votes") as CMlLabel).Show();
    }else{
        (Page.MainFrame.GetFirstChild("stars-bg") as CMlLabel).Show();
        (Page.MainFrame.GetFirstChild("no-votes") as CMlLabel).Hide();
        width = average * 0.11;
    }

    AnimMgr.Add(starFrame, "<frame size='"^width^" 3' />", 750, CAnimManager::EAnimManagerEasing::ExpOut);
}

Void switchButton(CMlControl frameControl, Boolean enabled){
    declare frame = (frameControl as CMlFrame);
    declare label1 = (frame.Controls[0] as CMlLabel);
    declare label2 = (frame.Controls[1] as CMlQuad);
    declare label3 = (frame.Controls[2] as CMlLabel);

    if(enabled){
        label1.Show();
        label2.Show();
        label3.Hide();
    }else{
        label1.Hide();
        label2.Hide();
        label3.Show();
    }
}

Void updateMyRating(Integer myRating){
    declare buttonsFrame <=> (Page.MainFrame.GetFirstChild("buttons") as CMlFrame);
    declare finishNotice <=> (Page.MainFrame.GetFirstChild("finish-notice") as CMlFrame);

    if(myRating == -2){
        buttonsFrame.Hide();
        finishNotice.Show();
    }else{
        buttonsFrame.Show();
        finishNotice.Hide();

        foreach(frame in buttonsFrame.Controls){
            switchButton(frame, False);
        }

        if(myRating != -1){
            switchButton(Page.MainFrame.GetFirstChild("" ^ myRating), True);
        }
    }
}
    --></script>
    {/block}

    <script><!--
    {block globals}
    {/block}

    {block bootScript}
        declare Real EvoSC_MxKarma_VotesAverage for This;
        declare Integer EvoSC_MxKarma_VotesTotal for This = 0;
        declare Integer EvoSC_MxKarma_MyRating for This;
        declare Integer EvoSC_MxKarma_MyRating_Update for This;
        declare Text EvoSC_MxKarma_MyRating_MapUid for This;
        declare Text EvoSC_MxKarma_MapUid for This;
        declare Integer lastMyRatingUpdate = 0;
        declare Real lastKarma = 0.0;
        declare currentMapId = Map.Id;

        updateKarma({sprintf('%.02f',$average)}, {$total});
        updateMyRating(-2);

        left__ = {config('mx-karma.ui.position') == 'left' ? 'True' : 'False'};
        slot__ = {config('mx-karma.ui.slot')};
    {/block}

    {block loop}
        if(EvoSC_MxKarma_VotesAverage != lastKarma && EvoSC_MxKarma_MapUid == "" ^ Map.Id){
            updateKarma(EvoSC_MxKarma_VotesAverage, EvoSC_MxKarma_VotesTotal);
            lastKarma = EvoSC_MxKarma_VotesAverage;
        }

        if(currentMapId != Map.Id){
            currentMapId = Map.Id;
            EvoSC_MxKarma_MyRating = -2;
            updateMyRating(EvoSC_MxKarma_MyRating);
        }

        if(EvoSC_MxKarma_MyRating_Update != lastMyRatingUpdate && EvoSC_MxKarma_MyRating_Update > 0){
            lastMyRatingUpdate = EvoSC_MxKarma_MyRating_Update;
            stopLoading();
            updateMyRating(EvoSC_MxKarma_MyRating);
        }

        if(InputPlayer == Null) continue;
        if(InputPlayer.Score == Null) continue;
        if(InputPlayer.Score.BestRace == Null) continue;

        if(InputPlayer.Score.BestRace.Time != -1 && EvoSC_MxKarma_MyRating == -2){
            EvoSC_MxKarma_MyRating = -1;
            updateMyRating(EvoSC_MxKarma_MyRating);
        }
    {/block}

    {block pendingEvents}
        if(event.Control.HasClass("vote") && event.Type == CMlScriptEvent::Type::MouseClick){
            declare rating = event.Control.Parent.DataAttributeGet("id");
            TriggerPageAction("mxk.vote," ^ rating);
        }
    {/block}
--></script>
</manialink>
