{contentType text}
<script><!--
declare CMlFrame handle;
declare Text handleId;
declare Text D_Centered;

Void __dragSetFocus(Text id){
    declare Text EvoSC_Focused_Window_ID for This;
    declare Boolean[Text] EvoSC_Window_Focus for This;
    declare Boolean[Text] focus;
    foreach(ScriptId => Focused in EvoSC_Window_Focus){
        focus[ScriptId] = False;
    }
    focus[EVO_SCRIPT_ID] = True;
    EvoSC_Window_Focus = focus;
    EvoSC_Focused_Window_ID = EVO_SCRIPT_ID;
}

Void maniaLinkDrag(){
    declare Text EvoSC_Focused_Window_ID for This = "";
    declare Boolean[Text] EvoSC_Window_Focus for This;
    declare Vec2[Text] lastFramePosition for This;
    declare Boolean G_Drag_Active for This = False;

    if(D_Centered == ""){
        handle <=> (Page.MainFrame.GetFirstChild("handle") as CMlFrame);

        if(lastFramePosition.existskey(handleId)){
            handle.Parent.RelativePosition_V3 = lastFramePosition[handleId];
        }else{
            handle.Parent.RelativePosition_V3 = <handle.Parent.Size[0]*-0.5, handle.Parent.Size[1]*0.5>;
        }

        handleId = handle.DataAttributeGet("id");

        if(handleId == ""){
            //fallback if unset
            handleId = "" ^ handle.Id;
        }

        D_Centered = "x";
    }

    if(!handle.Parent.Visible){
        return;
    }

    declare framePos = handle.AbsolutePosition_V3;
    declare frameSize = handle.Size;

    if(handle.Parent.DataAttributeGet("centered") != "centered"){
        if(lastFramePosition.existskey(handleId)){
            handle.Parent.RelativePosition_V3 = lastFramePosition[handleId];
        }else{
            handle.Parent.RelativePosition_V3 = <handle.Parent.Size[0]/-2.0, handle.Parent.Size[1]/2.0>;
        }

        if(handle.Parent.RelativePosition_V3[1] > 150){
            handle.Parent.RelativePosition_V3 = <handle.Parent.RelativePosition_V3[0], handle.Parent.RelativePosition_V3[1] - 10>;
        }
        if(handle.Parent.RelativePosition_V3[1] < -150){
            handle.Parent.RelativePosition_V3 = <handle.Parent.RelativePosition_V3[0], handle.Parent.RelativePosition_V3[1] + 10>;
        }

        handle.Parent.DataAttributeSet("centered", "centered");
    }

    declare window <=> (Page.MainFrame.GetFirstChild("window") as CMlFrame);

    if(EvoSC_Focused_Window_ID != "" && EvoSC_Focused_Window_ID != EVO_SCRIPT_ID){
        return;
    }

    if(MouseLeftButton && !G_Drag_Active){
        if(MouseX >= framePos[0]){
            if(MouseY <= framePos[1]){
                if(MouseX <= (framePos[0] + frameSize[0]) && MouseY >= (framePos[1] - frameSize[1])){
                    declare Real ZIndex for UI = 305.0;
                    declare startPos = handle.Parent.RelativePosition_V3;
                    declare startX = MouseX;
                    declare startY = MouseY;

                    G_Drag_Active = True;

                    __dragSetFocus(EVO_SCRIPT_ID);
                    window.ZIndex = 310.0;

                    while(MouseLeftButton){
                        yield;

                        declare newPosX = startPos[0] + (MouseX - startX);
                        declare newPosY = startPos[1] + (MouseY - startY);

                        handle.Parent.RelativePosition_V3 = <newPosX, newPosY>;
                    }

                    lastFramePosition[handleId] = handle.Parent.RelativePosition_V3;

                    G_Drag_Active = False;
                }
            }
        }
    }

}
--></script>